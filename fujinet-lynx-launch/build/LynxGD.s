;
; File generated by cc65 v 2.19 - Git dcdf7ade0
;
	.fopt		compiler,"cc65 v 2.19 - Git dcdf7ade0"
	.setcpu		"65SC02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_LynxGD_Init
	.export		_LynxGD_LowPowerMode
	.export		_LynxGD_OpenDir
	.export		_LynxGD_ReadDir
	.export		_LynxGD_OpenFile
	.export		_LynxGD_ReadFile
	.export		_LynxGD_WriteFile
	.export		_LynxGD_CloseFile
	.export		_LynxGD_SeekFile
	.export		_LynxGD_GetFileSize
	.export		_LynxGD_ProgramROMFromFile
	.export		_LynxGD_ClearROMBlocks
	.export		_AUXMASK

.segment	"RODATA"

_AUXMASK:
	.byte	$10

; ---------------------------------------------------------------
; void __near__ LynxGD_Init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_Init: near

.segment	"CODE"

	stz     $FD8A
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ LynxGD_LowPowerMode (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_LowPowerMode: near

.segment	"CODE"

	lda     #$0A
	jmp     _WriteByte

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_OpenDir (const char *pDir)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_OpenDir: near

.segment	"CODE"

	jsr     pushax
	lda     #$00
	jsr     _WriteByte
	jsr     ldax0sp
	jsr     _WriteString
	jsr     _ReadByte
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_ReadDir (struct $anon-struct-0009 *pInfo)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_ReadDir: near

.segment	"CODE"

	jsr     pushax
	lda     #$01
	jsr     _WriteByte
	jsr     _ReadByte
	sta     M0001
	ldx     #$00
	lda     M0001
	bne     L0003
	jsr     pushw0sp
	ldx     #$00
	lda     #$16
	jsr     _ReadBytes
	ldx     #$00
L0003:	lda     M0001
	jmp     incsp2

.segment	"BSS"

M0001:
	.res	1,$00

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_OpenFile (const char *pFile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_OpenFile: near

.segment	"CODE"

	jsr     pushax
	lda     #$02
	jsr     _WriteByte
	jsr     ldax0sp
	jsr     _WriteString
	jsr     _ReadByte
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_ReadFile (void *pBuffer, unsigned short nSize)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_ReadFile: near

.segment	"CODE"

	jsr     pushax
	lda     #$05
	jsr     _WriteByte
	jsr     ldax0sp
	jsr     _WriteWord
	ldy     #$05
	jsr     pushwysp
	ldy     #$03
	jsr     ldaxysp
	jsr     _ReadBytes
	jsr     _ReadByte
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_WriteFile (void *pBuffer, unsigned short nSize)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_WriteFile: near

.segment	"CODE"

	jsr     pushax
	lda     #$06
	jsr     _WriteByte
	jsr     ldax0sp
	jsr     _WriteWord
	ldy     #$05
	jsr     pushwysp
	ldy     #$03
	jsr     ldaxysp
	jsr     _WriteBytes
	jsr     _ReadByte
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ LynxGD_CloseFile (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_CloseFile: near

.segment	"CODE"

	lda     #$07
	jsr     _WriteByte
	jmp     _ReadByte

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_SeekFile (unsigned long nSeekPos)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_SeekFile: near

.segment	"CODE"

	jsr     pusheax
	lda     #$04
	jsr     _WriteByte
	jsr     ldeax0sp
	jsr     _WriteDword
	jsr     _ReadByte
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned long __near__ LynxGD_GetFileSize (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_GetFileSize: near

.segment	"CODE"

	lda     #$03
	jsr     _WriteByte
	jmp     _ReadDword

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_ProgramROMFromFile (unsigned short nStartBlock, unsigned char nBlockSize, unsigned short nBlockCount, unsigned char b512BlockCard)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_ProgramROMFromFile: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	beq     L0002
	ldy     #$03
	lda     (sp),y
	ora     #$10
	sta     (sp),y
L0002:	lda     #$08
	jsr     _WriteByte
	ldy     #$05
	jsr     ldaxysp
	jsr     _WriteWord
	ldy     #$03
	lda     (sp),y
	jsr     _WriteByte
	ldy     #$02
	jsr     ldaxysp
	jsr     _WriteWord
	jsr     _ReadByte
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; enum $anon-enum-0008 __near__ __fastcall__ LynxGD_ClearROMBlocks (unsigned short nStartBlock, unsigned short nBlocks, unsigned char b512BlockCard)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LynxGD_ClearROMBlocks: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	beq     L0002
	ldy     #$02
	jsr     ldaxysp
	pha
	txa
	ora     #$80
	tax
	pla
	ldy     #$01
	jsr     staxysp
L0002:	lda     #$09
	jsr     _WriteByte
	ldy     #$04
	jsr     ldaxysp
	jsr     _WriteWord
	ldy     #$02
	jsr     ldaxysp
	jsr     _WriteWord
	jsr     _ReadByte
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ WriteByte (unsigned char byte)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WriteByte: near

.segment	"CODE"

	jsr     pusha
L0005:	lda     _AUXMASK
	and     $FD8B
	pha
	pla
	bne     L0005
	lda     (sp)
	sta     $FCB3
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ WriteBytes (unsigned char *pBuf, unsigned short nSize)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WriteBytes: near

.segment	"CODE"

	jsr     pushax
	bra     L0004
L0002:	ldy     #$03
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	pha
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	pla
	jsr     _WriteByte
L0004:	ldy     #$01
	lda     (sp),y
	ora     (sp)
	php
	ldx     #$00
	tya
	jsr     subeq0sp
	plp
	bne     L0002
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ WriteWord (unsigned short word)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WriteWord: near

.segment	"CODE"

	jsr     pushax
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     _WriteBytes
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ WriteDword (unsigned long dword)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WriteDword: near

.segment	"CODE"

	jsr     pusheax
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _WriteBytes
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ReadByte (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ReadByte: near

.segment	"CODE"

L0005:	lda     _AUXMASK
	and     $FD8B
	tax
	beq     L0005
	ldx     #$00
	lda     $FCB2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ ReadBytes (unsigned char *pOut, unsigned short size)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ReadBytes: near

.segment	"CODE"

	jsr     pushax
	bra     L0004
L0002:	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jsr     _ReadByte
	ldy     #$00
	jsr     staspidx
L0004:	ldy     #$01
	lda     (sp),y
	ora     (sp)
	php
	ldx     #$00
	tya
	jsr     subeq0sp
	plp
	bne     L0002
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned long __near__ ReadDword (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ReadDword: near

.segment	"CODE"

	lda     #<(M0001)
	ldx     #>(M0001)
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _ReadBytes
	lda     M0001+3
	sta     sreg+1
	lda     M0001+2
	sta     sreg
	ldx     M0001+1
	lda     M0001
	rts

.segment	"BSS"

M0001:
	.res	4,$00

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ WriteString (const char *pStr)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_WriteString: near

.segment	"CODE"

	jsr     pushax
L0002:	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     M0001
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	lda     M0001
	jsr     _WriteByte
	lda     M0001
	bne     L0002
	jmp     incsp2

.segment	"BSS"

M0001:
	.res	1,$00

.endproc

