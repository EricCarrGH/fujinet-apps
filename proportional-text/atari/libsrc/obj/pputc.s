;
; File generated by cc65 v 2.19 - Git dcdf7ade0
;
	.fopt		compiler,"cc65 v 2.19 - Git dcdf7ade0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_tgi_setpixel
	.import		__pcx
	.import		__pcy
	.import		_font
	.export		_pputc

; ---------------------------------------------------------------
; unsigned char __near__ pputc (const char c)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_pputc: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp6
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     aslax3
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     tosaddax
	ldy     #$04
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	clc
	adc     #<(_font)
	tay
	txa
	adc     #>(_font)
	tax
	tya
	ldy     #$00
	jsr     ldauidx
	ldy     #$03
	sta     (sp),y
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldx     #$00
	lda     #$00
	ldy     #$02
	sta     (sp),y
L0002:	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     #$08
	jsr     boolult
	jne     L0005
	jmp     L0003
L0005:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     tosaddax
	clc
	adc     #<(_font)
	tay
	txa
	adc     #>(_font)
	tax
	tya
	ldy     #$00
	jsr     ldauidx
	jsr     pusha
	ldx     #$00
	lda     #$00
	ldy     #$01
	jsr     staxysp
L0006:	ldy     #$02
	jsr     ldaxysp
	jsr     pushax
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     tosultax
	jne     L0009
	jmp     L0007
L0009:	lda     __pcx
	ldx     __pcx+1
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     tosaddax
	cmp     #$40
	txa
	sbc     #$01
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L000A
	jmp     L0008
L000A:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	ldx     #$00
	and     #$80
	cpx     #$00
	bne     L000C
	cmp     #$80
L000C:	jsr     booleq
	jeq     L000D
	lda     __pcx
	ldx     __pcx+1
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     tosaddax
	cpx     #$01
	jsr     boolult
	jne     L000E
L000D:	ldx     #$00
	lda     #$00
	jeq     L000F
L000E:	ldx     #$00
	lda     #$01
L000F:	jeq     L000B
	lda     __pcx
	ldx     __pcx+1
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     __pcy
	jsr     pushax
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	jsr     tosaddax
	jsr     _tgi_setpixel
L000B:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	asl     a
	ldy     #$00
	sta     (sp),y
L0008:	ldy     #$01
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0006
L0007:	jsr     incsp1
	ldy     #$02
	ldx     #$00
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jmp     L0002
L0003:	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jmp     L0001
L0001:	jsr     incsp7
	rts

.endproc

