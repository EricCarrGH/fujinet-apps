;          TITLE "ATARI 800 CHECKERS DISPLAY BY C. SHAW 3/31/80" 
; 
;COPYRIGHT ATARI 1980 
; 
;THIS IS AN EXAMPLE OF A DISPLAY LIST WHICH USES CHARACTER MAPPING TO 
;PRODUCE THE CHECKERS AND THE TOP AND BOTTOM BORDERS OF THE BOARD. 
;PLAYERS ARE USED FOR THE RED SQUARES. THIS GIVES 6 COLORS WITHOUT 
;CHANGING THE COLOR REGISTERS. 
;MISSILES ARE USED FOR THE LEFT AND RIGHT BORDERS. 
;THE PROGRAM STARTS AT THE LOCATION SPECIFIED BY PMB. 
;A FEW TRICKS ARE USED TO SAVE RAM, BUT FURTHER OPTIMIZATION IS POSSIBLE 
;THIS IS A RAM BASED PROGRAM WHICH RUNS WITH THE ASSEMBLER CARTRIDGE, NOT A 
;ROM CARTRIDGE. 
; 
;COLLEEN (ATARI 800) EQUATES 
; 
CHBASE =    $D409 
DMACTL =    $D400 
SDMCTL =    $022F 
HPOSP0 =    $D000 
SIZEP0 =    $D008 
PCOLR0 =    $02C0 
SDLSTL =    $0230 
SDLSTH =    $0231 
GRACTL =    $D01D 
PMBASE =    $D407 
GPRIOR =    $026F 
VDSLST =    $0200 
NMIEN  =    $D40E 
; 
;DISPLAY LIST EQUATES 
; 
INT    =    $80   ;DISPLAY LIST INTERRUPT (BIT 7 OF NMI STATUS) 
JMPWT  =    $41   ;JUMP AND WAIT UNTIL END OF NEXT VERTICAL BLANK (2 BYTES) 
RELOAD =    $40   ;RELOAD MEM SCAN COUNTER (2 BYTES) 
VSC    =    $20   ;VERTICAL SCROLL ENABLE 
HSC    =    $10   ;HORIZONTAL SCROLL ENABLE 
JUMP   =    1     ;JUMP INSTRUCTION (2 BYTES) 
BLANK1 =    0     ;1 BLANK TV LINE 
BLANK2 =    $10   ;2 BLANK LINES 
BLANK3 =    $20   ;3 
BLANK4 =    $30   ;4 
BLANK5 =    $40   ;5 
BLANK6 =    $50   ;6 
BLANK7 =    $60   ;7 
BLANK8 =    $70   ;8 BLANK TV LINES 
        PAGE 
; 
INTOFF =    $20       ;USED TO GET INTERNAL CODE FOR UPPER CASE ALPHANUMERICS 
; 
;INTERNAL CHARACTER CODES 
; 
SPI    =    ' -INTOFF 
AI     =    'A-INTOFF 
CI     =    'C-INTOFF 
DI     =    'D-INTOFF 
EI     =    'E-INTOFF 
GI     =    'G-INTOFF 
HI     =    'H-INTOFF 
II     =    'I-INTOFF 
OI     =    'O-INTOFF 
PI     =    'P-INTOFF 
RI     =    'R-INTOFF 
TI     =    'T-INTOFF 
YI     =    'Y-INTOFF 
N1I    =    '1-INTOFF 
N8I    =    '8-INTOFF 
N9I    =    '9-INTOFF 
N0I    =    '0-INTOFF 
; 
;CHECKERS EQUATES 
; 
;CODES FOR SPECIAL CHECKERS CHARACTER SET 
; 
EMPTY  =    0      ;EMPTY SQUARE 
CHECKER=    1      ;ORDINARY CHECKER 
KING   =    2 
CURS   =    3      ;CURSOR (X) 
BORDER =    4      ;USED FOR TOP AND BOTTOM BORDERS OF BOARD 
; 
CLP0   =    0      ;PLAYER 0 (HUMAN) 
CLP1   =    $80        ;PLAYER 1 (COMPUTER) 
CLBOR  =    $C0        ;BORDER COLOR (USED TO SET UP 2 MSB'S OF CHAR) 
PMB    =    $5000  ;PLAYER MISSILE BASE ADDRESS & PROGRAM LOCATION 

; 
; RAM VARIABLES 
; 
       *=  PMB 
BOARD  *=  *+32        ;CHECKER BOARD (ONLY 32 BLOCK SQUARES ARE USED) 
T0     *=  *+1         ;TEMP FOR MOVING BOARD TO MEM MAP 
; 
;PLAYER AND MISSILE GRAPHICS. 
;PLAYERS ARE USED FOR SQUARES, MISSILES FOR LEFT AND RIGHT BORDERS. 
; 
       *=   PMB+$180 
GRM03  *=   *+$80     ;MISSILE GRAPHICS 
GRP0   *=   *+$80     ;PLAYER 0 GRAPHICS 
GRP1   *=   *+$80     ;PLAYER 1 
GRP2   *=   *+$80     ;       2 
GRP3   *=   *+$80     ;       3 
; 
TITL   *=   *+20      ;TOP LINE OF CHARS -- ATASCII MESSAGE 
TOPBRD *=   *+16      ;TOP BORDER OF BOARD 
BRDSP  *=   8*16+*    ;BOARD DISPLAY 
BOTBRD *=   *+16      ;BOTTOM BORDER 

; 
;GP -- SPECIAL CHECKERS CHARACTER SET (ONLY CODES 0-4 ARE USED). 
; 
       *=   PMB+$600 
GR 
       .BYTE 0,0,0,0,0,0,0,0 ; BLANK (0) 







       .BYTE $3C,$7E,$FF,$FF,$FF,$FF,$7E,$3C ;CHECKER (1) 







       .BYTE $3C,$7E,$A5,$A5,$C3,$C3,$7E,$3C ;KING (2) 







       .BYTE $C3,$66,$3C,$18,$18,$3C,$66,$C3 ;CURSOR (3) 







       .BYTE 0,$FF,$FF,$FF,$FF,$FF,$FF,0 ;BORDER (4) 








; 
; 
;DISPLAY LIST 
; 
DSP 
       .BYTE BLANK8 ;24 BLANK LINES 
       .BYTE BLANK8 
       .BYTE BLANK8 
       .BYTE RELOAD+6 ;LINES 0-7 MESSAGE LINE: 20 ACROSS X 5 COLOR X 1 LINE RESOLUTION CHARACTERS 
       .WORD TITL 
       .BYTE INT+BLANK1 ;8. INTERRUPT TO CHANGE CHARACTER BASE ADDRESS AND CHANGE TO NARROW SCREEN. 
       .BYTE 6        ;9-16. TOP BORDER: 16 X 5 X 1 CHARS (LAST LINE IS TOP OF 1ST ROW OF SQUARES) 
       .BYTE BLANK2   ;17-18. TOP OF FIRST ROW OF SQUARES 
;                     CHECKERBOARD (8 LINES OF CHARS WITH SPACES INBETWEEN - 22 LINES/SQUARE) 
       .BYTE 7        ;19-34. 16X5X2 LINE RESOLUTION CHARS 
       .BYTE BLANK6   ;35-40. FIRST 3 LINES=BOTTOM OF PREVIOUS SQUARE. 
       .BYTE 7        ;41-56 
       .BYTE BLANK6   ;57-62. LAST 3 LINES=TOP OF NEXT SQUARE. 
       .BYTE 7        ;63-78 
       .BYTE BLANK6   ;79-84 
       .BYTE 7        ;85-100 
       .BYTE BLANK6   ;101-106 
       .BYTE 7        ;107-122 
       .BYTE BLANK6   ;123-128 
       .BYTE 7        ;129-144 
       .BYTE BLANK6   ;145-150 
       .BYTE 7        ;151-166 
       .BYTE BLANK6   ;167-172 
       .BYTE 7        ;173-188 
;                      NEXT THREE LINES ARE BOTTOM OF PREVIOUS SQUARE 
       .BYTE BLANK2   ;189-190. END OF NORMAL DISPLAY (SHOULD BE ON SCREEN ON ALL TV'S). 
       .BYTE 6        ;191-198. BOTTOM BORDER (MAY OVERSCAN, BUT NOT ESSENTIAL TO GAME PLAY) 
       .BYTE JMPWT    ;WAIT FOR NEXT VBLANK, THEN START OVER 
       .WORD DSP 
; 
; 
;DSP -- DISPLAY LIST INTERRUPT HANDLER. 
;CHANGES CHARACTER BASE AND WIDTH OF DISPLAY FOR SPECIAL CHECKERS GRAPHICS 
;THE OS WILL CHANGE CHBASE BACK TO NORMAL DURING VERTICAL BLANK. 
; 
NCHR 
       PHA 
       LDA  #GR/256 
       STA  CHBASE 
; 
;INSTRUCTION FETCH DMA ENABLE, P/M 2 LINE RES, P/M DMA ENABLE, NARROW SCREEN (128 CLOCKS) 
       LDA  #$2D 
       STA  DMACTL 
       PLA 
       RTI 

; 
;INITIALIZATION CODE -- START EXECUTION HERE 
; 
       *=   PMB+$700 
; 
;INIT OS'S DMACTL VRRIRBLE 
;INSTRUCTION FETCH DMA ENABLE, P/M 2 LINE RES, P/M DMA ENABLE, STANDARD SCREEN (160 CLOCKS) 
; 
       LDA  #$2E 
       STA  SDMCTL 
; 
;CLEAR RAM 
; 
       LDA  #0 
       TAX 
INITLP 
       STA  PMB,X 
       STA  PMB+$100,X 
       STA  PMB+$200,X 
       STA  PMB+$300,X 
       STA  PMB+$400,X 
       INX 
       BNE  INITLP 
; 
;INITIALIZE MISSILE GRAPHICS FOR BORDERS 
; 
       LDA  #$0E 
       LDY  #$5E 
LQPZ   STA  GRM03+$14,Y 
       DEY 
       BNE  LQPZ 
; 
;INITIALIZE TOP AND BOTTOM BORDERS. 
; 
       LDY  #16 
       LDA  #CLBOR+BORDER 
TBLP   STA  TOPBRD-1,Y 
       STA  BOTBRD-1,Y 
       DEY 
       BNE  TBLP ; CONTINUE UNTIL Y=0 
; 
;INITIALIZE PLAYER GRAPHICS FOR SQUARES (CHECKER BOARD) Y=0 
; 
       LDA  #$F0 
IN2    LDX  #10 
IN3    STA  GRP0+$18,Y 
       STA  GRP1+$18,Y 
       STA  GRP2+$18,Y 
       STA  GRP3+$18,Y 
; 
       PHA 
       LDA  #$0A 
       STA  GRM03+$18,Y ;REST OF MISSILE GRAPHICS 
       PLA 
       INY 
       DEX 
       BPL  IN3 
       EOR  #$FF      ;FILL IN OPPOSITE SQUARES 
       CPY  #88 
       BCC  IN2 
       LDY  #8 
; 
; INITIALIZE PLAYER AND MISSILE POSITIONS AND COLORS 
; 
IN4    LDA  ITBL,Y 
       STA  HPOSP0,Y 
       TXA           ;$FF 
       STA  SIZEP0,Y ;$03 INDICATES 4 TIMES NORMAL SIZE (REST IS DON'T CARE) 
       LDA  ITBL1,Y 
       STA  PCOLR0,Y 
       DEY 
       BPL  IN4 
; 
;OS, ANTIC, POKEY INITIALIZATION 
; 
       LDA  #DSP&$FF  ; DISPLAY LIST START ADDRESS (LSB) 
       STA  SDLSTL 
       LDA  #DSP/256  ; MSB OF ADDRESS 
       STA  SDLSTH 
       LDA  #3        ;ENABLE PLAYER/MISSILE DMA TO GRAPHICS REGS. 
       STA  GRACTL 
       LDA  #PMB/256  ;MSB OF ADDRESS OF PLAYER/MISSILE GRAPHICS 
       STA  PMBASE 
       LDA  #$14      ;5TH PLAYER ENABLE (USE PF3 FOR MISSILE COLOR), PF TAKES PRIO OVER PLAYERS 
       STA  GPRIOR    ;OS PRIORITY REG 
       LDA  #NCHR&$FF ;DISPLAY LIST INTERRUPT VECTOR (LSB) 
       STA  VDSLST 
       LDA  #NCHR/256 
       STA  VDSLST+1 
       STX  NMIEN     ;X=$FF   $C0 ENABLES DISPLAY LIST & VBLANK INTERRUPTS. 
; 
;INITIALIZE BOARD DISPLAY 
; 
       LDX  #11 
BRDLP 
       LDA  #CHECKER+CLP0 ;HUMAN PIECES ON SQUARES 0-11 
       STA  BOARD,X 
       LDA  #CHECKER+CLP1 ;COMPUTER PIECES ON SQUARES 20-31 
       STA  BOARD+20,X 
       DEX 
       BPL  BRDLP 
; 
;MOVE COPYRIGHT MESSAGE TO MESSAGE DISPLAY LINE 
; 
       LDX  #19 
IN6    LDA  COPY,X 
       STA  TITL,X 
       DEX 
       BPL  IN6 
; 
;LOOP TO MOVE BOARD TO GRAPHICS AREA. 
;THE CHECKERS PROGRAM LOGIC COULD BE ADDED HERE OR A VBLANK INTERRUPT COULD BE USED. 
; 
LOOP 
       JSR  UPCHR 
       JMP  LOOP 
; 
; 
; 
; 
;UPCHR -- SUBROUTINE TO MOVE 32 BYTES OF CHECKER BOARD TO DISPLAY RAM. 
; 
UPCHR 
       LDX  #31       ;SQUARE 31 = UPPER LEFT 
       LDY  #0 
UPLP1 
       LDA  #4-1      ;4 SQUARES/LINE 
       STA  T0 
UPLP2 
       LDA  BOARD,X 
       STA  BRDSP+2,Y ; FOR ROWS SHIFTED TO RIGHT 
       LDA  BOARD-4,X 
       STA  BRDSP+$10,Y ; FOR ROWS SHIFTED TO LEFT 
       INY 
       INY 
       INY 
       INY 
       DEX 
       DEC  T0 
       BPL  UPLP2 
; 
       TYA 
       CLC 
       ADC  #$10 
       TAY 
       TXA 
       SBC  #4-1      ;CARRY IS CLEAR (SUBTRACT 4) 
       TAX 
       BCS  UPLP1 
       RTS 
; 
; 
; 
; 
;DATA 
;HORIZONTAL POSITION OF PLAYERS (SQUARES) AND MISSILES (SIDE BORDERS). 
;M0=RIGHT BORDER, M1=LEFT BORDER 
;M2 & M3 ARE PLACED WITH M1. 
;             P0, P1, P2, P3, M0, M1, M2, M2 
ITBL 
       .BYTE $3C,$5C,$7C,$9C,$BC,$38,$38,$38 







; 
;COLOR TABLE 
ITBL1 
       .BYTE $34,$34,$34,$34 ;4 PLAYERS (RED SQUARES) 



       .BYTE $36      ;PF0 RED CHECKERS AND MESSAGES 
       .BYTE $88      ;PF1 BLUE CHARACTERS 
       .BYTE $0E      ;PF2 WHITE CHECKERS AND MESSAGES 
       .BYTE $26      ;PF3 YELLOW BORDER (CHARS & MISSILES) 
       .BYTE 0        ;BK: BLACK BACKGROUND 
; 
;"COPYRIGHT ATARI 1980" MESSAGE 
; 
OF     =    $00       ;FOR PF0 COLOR (RED) 
OF2    =    $80       ;FOR PF2 COLOR (WHITE) 
OF3    =    $40       ;FOR PF1 COLOR (BLUE) 
TGTBL 
COPY   .BYTE SPI,CI+OF,OI+OF,PI+OF,YI+OF,RI+OF,II+OF,GI+OF,HI+OF,TI+OF 









       .BYTE AI+OF2,TI+OF2,AI+OF2,RI+OF2,II+OF2,N1I+OF3,N9I+OF3,N8I+OF3,N0I+OF3 








